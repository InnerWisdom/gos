<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Weather App</title>
  <link rel="icon" href="favicon.ico">
  <link rel="stylesheet" href="main.css" />
</head>
<body>
  <div class="app-wrap">
    <header>
      <input type="text" autocomplete="off" class="search-box" placeholder="Search for a city..." />
    </header>
    <main>
      <section class="location">
        <div class="city">New York, US</div>
        <div class="date">Wednesday 22 July 2020</div>
      </section>
      <div class="current">
        <div class="temp">15<span>°c</span></div>
        <div class="weather">Sunny</div>
        <div class="hi-low">13°c / 16°c</div>
      </div>
    </main>
  </div>
  <script src="main.js"></script>
</body>
</html>



* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'montserrat', sans-serif;
  background-image: url('bg.jpg');
  background-size: cover;
  background-position: top center;
}

.app-wrap {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3));
}

header {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 50px 15px 15px;
}

header input {
  width: 100%;
  max-width: 280px;
  padding: 10px 15px;
  border: none;
  outline: none;
  background-color: rgba(255, 255, 255, 0.3);
  border-radius: 0px 16px 0px 16px;
  border-bottom: 3px solid gray;

  color: #313131;
  font-size: 20px;
  font-weight: 300;
  transition: 0.2s ease-out;
}

header input:focus {
  background-color: rgba(255, 255, 255, 0.6);
}

main {
  flex: 1 1 100%;
  padding: 25px 25px 50px;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.location .city {
  color: #fff;
  font-size: 32px;
  font-weight: 500;
  margin-bottom: 5px;
}

.location .date {
  color: #fff;
  font-size: 16px;
}

.current .temp {
  color: #fff;
  font-size: 102px;
  font-weight: 900;
  margin: 30px 0px;
  text-shadow: 2px 10px rgba(0, 0, 0, 0.6);
}

.current .temp span {
  font-weight: 500;
}

.current .weather {
  color: #fff;
  font-size: 32px;
  font-weight: 700;
  font-style: italic;
  margin-bottom: 15px;
  text-shadow: 0px 3px rgba(0, 0, 0, 0.4);
}

.current .hi-low {
  color: #fff;
  font-size: 24px;
  font-weight: 500;
  text-shadow: 0px 4px rgba(0, 0, 0, 0.4);
}


const api = {
  key: "fcc8de7015bbb202209bbf0261babf4c",
  base: "https://api.openweathermap.org/data/2.5/"
}

const searchbox = document.querySelector('.search-box');
searchbox.addEventListener('keypress', setQuery);

function setQuery(evt) {
  if (evt.keyCode == 13) {
    getResults(searchbox.value);
  }
}

function getResults (query) {
  fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)
    .then(weather => {
      return weather.json();
    }).then(displayResults);
}

function displayResults (weather) {
  let city = document.querySelector('.location .city');
  city.innerText = `${weather.name}, ${weather.sys.country}`;

  let now = new Date();
  let date = document.querySelector('.location .date');
  date.innerText = dateBuilder(now);

  let temp = document.querySelector('.current .temp');
  temp.innerHTML = `${Math.round(weather.main.temp)}<span>°c</span>`;

  let weather_el = document.querySelector('.current .weather');
  weather_el.innerText = weather.weather[0].main;

  let hilow = document.querySelector('.hi-low');
  hilow.innerText = `${Math.round(weather.main.temp_min)}°c / ${Math.round(weather.main.temp_max)}°c`;
}

function dateBuilder (d) {
  let months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  let days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

  let day = days[d.getDay()];
  let date = d.getDate();
  let month = months[d.getMonth()];
  let year = d.getFullYear();

  return `${day} ${date} ${month} ${year}`;
}





=============================================app.js=========================================================
function fetchData(url) {
  return fetch(url)
    .then(response => response.json())
    .then(data => {
      return data;
    });
}

function formatDate(date) {
  const options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' };
  return date.toLocaleDateString('en-US', options);
}

function createTemperatureElement(date, temp) {
  const temperatureElement = document.createElement('div');
  const dateElement = document.createElement('div');
  const tempElement = document.createElement('div');

  dateElement.textContent = formatDate(date);
  tempElement.textContent = temp;

  temperatureElement.appendChild(dateElement);
  temperatureElement.appendChild(tempElement);

  return temperatureElement;
}

document.addEventListener('DOMContentLoaded', function() {
  const appElement = document.getElementById('app');

  fetchData('https://api.open-meteo.com/v1/forecast?latitude=54.3&longitude=48.4&hourly=temperature_2m')
    .then(data => {
      data.hourly.time.forEach((time, index) => {
        const date = new Date(time);
        const temp = data.hourly.temperature_2m[index];
        const temperatureElement = createTemperatureElement(date, temp);
        appElement.appendChild(temperatureElement);
      });
    });
});
=============================================index.html=========================================================
<!DOCTYPE html>
<html>
<head>
  <title>Weather App</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <div id="app">
    <header class="App-header">
      <img src="logo.svg" class="App-logo" alt="logo">
      <p>
        Edit <code>app.js</code> and save to reload.
      </p>
    </header>
  </div>

  <script src="app.js"></script>
</body>
</html>
=============================================styles.css=========================================================
.App-header {
  background-color: #282c34;
  padding: 20px;
  color: white;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}
